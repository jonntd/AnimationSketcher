global proc AnimationSketcherMainMenu()
{
	if (`window -exists lsystemWindow`) deleteUI lsystemWindow;

	window -title "LSystem" -widthHeight 550 400 lsystemWindow;
	columnLayout;
	text -l "Browse for grammar files";
	button -l "Browse.." -command "loadGramarFile";

	scrollField -wordWrap true sGrammar;

	columnLayout -adjustableColumn true;

	frameLayout -label "LSystem Parameters" -collapsable true;
	columnLayout;
	//slider
	floatSliderGrp -label "iterations" -field true 
	-minValue 1.0 -maxValue 100.0 
	-value 3
	iterationsSlider;

	floatSliderGrp -label "Default step size" -field true 
	-minValue 1.0 -maxValue 100.0 
	-value 1 
	stepSlider;

	floatSliderGrp -label "Default angle" -field true 
	-minValue 1.0 -maxValue 100.0 
	-value 30 
	angleSlider;

	setParent ..;
	setParent ..;
	setParent ..;

	button -l "Create" -command "generateTree";
	button -l "Cancel";
	
	showWindow lsystemWindow;
}


global proc RandomNodeDefault()
{
    string $cube[] = `polyCube`;
    string $inst1 = `instancer`;
    string $randnode = `createNode randomNode`;
    connectAttr ($cube[0]+".matrix", $inst1+".inputHierarchy[0]");
    connectAttr ($randnode+".outPoints", $inst1+".inputPoints");
}

global proc RandomNodeSelected()
{
    string $selected[] = `ls -sl`;
    if(size($selected) > 0)
    {
        string $inst1 = `instancer`;
        string $randnode = `createNode randomNode`;
        connectAttr ($selected[0]+".matrix", $inst1+".inputHierarchy[0]");
        connectAttr ($randnode+".outPoints", $inst1+".inputPoints");
    }
    else
    {
        print "Random Node: Nothing selected!";
    }
}

global proc LSystemNodeDefault()
{
    string $cube[] = `polyCube`;
    string $sphere[] = `polySphere`;
    string $inst1 = `instancer`;
    string $inst2 = `instancer`;
    string $lsnode = `createNode LSystemInstanceNode`;
    connectAttr ($cube[0]+".matrix",$inst1+".inputHierarchy[0]");
    connectAttr ($sphere[0]+".matrix", $inst2+".inputHierarchy[0]");
    connectAttr ($lsnode+".outBranches", $inst1+".inputPoints");
    connectAttr ($lsnode+".outFlowers", $inst2+".inputPoints");
}

global proc LSystemNodeSelected()
{
    string $selected[] = `ls -sl`;
    if(size($selected) >= 2)
    {
        string $inst1 = `instancer`;
        string $inst2 = `instancer`;
        string $lsnode = `createNode LSystemInstanceNode`;
        connectAttr ($selected[0]+".matrix",$inst1+".inputHierarchy[0]");
        connectAttr ($selected[1]+".matrix", $inst2+".inputHierarchy[0]");
        connectAttr ($lsnode+".outBranches", $inst1+".inputPoints");
        connectAttr ($lsnode+".outFlowers", $inst2+".inputPoints");
    }
    else
    {
        print "LSystem Node: Not enough geometries selected!";
    }
}

global string $nameMenu;

global proc createMenu()
{
    global string $nameMenu;
    $nameMenu=`menu -label "AnimationSketcher" -parent "MayaWindow"`;
    menuItem -label "Random Node Default" -command "RandomNodeDefault()";
    menuItem -label "Random Node Selected" -command "RandomNodeSelected()";
    menuItem -label "LSystem Node Default" -command "LSystemNodeDefault()";
    menuItem -label "LSystem Node Selected" -command "LSystemNodeSelected()";
	menuItem -label "AnimationSketcher Menu" -command "AnimationSketcherMainMenu()";
}

global proc deleteMenu()
{
    global string $nameMenu;
    deleteUI -m $nameMenu;
}



